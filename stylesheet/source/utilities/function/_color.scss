/*------------------------------------*\
  # Color
  Function to provide som nice features
  for color handling
\*------------------------------------*/

/*
* foreground
* Checks the lightness of `$color`, and if it passes the `$threshold` of lightness, it returns the `$yes` color. Otherwise, it returns the   * `$no` color. Use this function to dynamically output a foreground color based on a given background color.
* @param {Color} $color - Color to check the lightness of.
* @param {Color} $yes [$black] - Color to return if `$color` is light.
* @param {Color} $no [$white] - Color to return if `$color` is dark.
* @param {Percentage} $threshold [60%] - Threshold of lightness to check against.
* @returns {Color} The $yes color or $no color.
**/

@function foreground($color, $yes: $black, $no: $white, $threshold: 60%) {
  @if $color == transparent {
    $color: $body-background;
  }
  @if (lightness($color) > $threshold) {
    @return $yes;
  }
  @else {
    @return $no;
  }
}

/**
* get-color
* Get color from default color-palette
* @param {key} color key from color-palette
* @returns {Color} color from color-palette
**/

@function get-color($key) {
  @if map-has-key($color-palette, $key) {
    @return map-get($color-palette, $key);
  } @else {
    @error 'given $key is not available in $app-palette';
  }
}